{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Pr\u00e1ctica 6.1 - Dockerizaci\u00f3n del Despliegue de una Aplicaci\u00f3n con Node.js","text":""},{"location":"#despliegue-con-docker","title":"Despliegue con Docker","text":"<p>Primero deberemos de clonar el repositorio de GitHub https://github.com/raul-profesor/DAW_practica_6.1_2024.git</p> <p></p> <p>Ahora isntalamos Docker en nuestra m\u00e1quina:</p> <p></p> <p>Ahora debemos de modificar el archivo <code>Dockerfile</code> para que construir la imagen de Docker:</p> <p>img3</p> <p>Ahora debemos de construir la imagen de Docker, en nuestro caso librodirecciones:</p> <p></p> <p>Inicio la imagen de Docker con el comando <code>sudo docker run -p 3000:3000 librodirecciones</code>:</p> <p></p> <p>Vemos que la aplicaci\u00f3n se ha iniciado correctamente:</p> <p></p>"},{"location":"#docker-compose","title":"Docker Compose","text":"<p>Ahora primero antes de nada debemos de instalar Docker Compose:</p> <p></p> <p>Comprobamos que se ha instalado correctamente:</p> <p></p> <p>Ahora debemos de crear el archivo <code>docker-compose.yml</code>:</p> <p></p> <p>La parte de postgres es relativo a la base de datos que se va a utilizar, la cual va a estar montado en el puerto 5432.</p> <p>La secci\u00f3n addressbook se encarga de construir la imagen de Docker usando el archivo <code>Dockerfile</code> y DB_HOST se establece como el nombre del servicio de la base de datos.</p> <p>Usar depends_on para asegurarse de que la base de datos se inicie antes de que se inicie la aplicaci\u00f3n.</p> <p>Ahora debemos de construir la base de datos:</p> <p></p> <p>Ahora debemos de iniciar la aplicaci\u00f3n con el comando <code>sudo docker-compose up --build -d</code>:</p> <p></p> <p>Se ejecuta el comando docker compose run addressbook npm run test para ver si la aplicaci\u00f3n funciona correctamente:</p> <p></p>"},{"location":"#tarea","title":"Tarea","text":"<p>Se debe de probar la aplicaci\u00f3n con la BBDD y la API:</p> <ul> <li>A\u00f1ade una persona: curl -X PUT http://localhost:4000/persons -H 'Content-Type: application/json' -d '{\"id\": 1, \"firstName\": \"Ra\u00fal\", \"lastName\": \"Profesor\"}'</li> </ul> <p></p> <ul> <li>Listar todas las personas:curl -X GET http://localhost:4000/persons/all -H 'Content-Type: application/json'</li> </ul> <p></p> <ul> <li>Buscar una persona por ID: curl -X GET http://localhost:4000/persons/1 -H 'Content-Type: application/json'</li> </ul> <p></p> <ul> <li>Eliminar una persona: curl -X DELETE http://localhost:4000/persons/1 -H 'Content-Type: application/json'</li> </ul> <p></p> <p>Deb\u00ed de cambiar el puerto del adressbook en el archivo <code>docker-compose.yml</code> porque sal\u00eda que el puerto estaba ya ocupado.</p>"}]}